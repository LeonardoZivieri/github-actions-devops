name: Create Release
on:
  workflow_dispatch:
    inputs:
      base-version:
        type: string
        description: "Version"
      release-type:
        type: choice
        description: "Version tag"
        required: true
        options:
          - patch
          - minor version
          - major version
      base-branch:
        type: string
        description: "Base branch to create pull request"
jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:

      - name: Project checkout
        id: checkout
        uses: actions/checkout@v4
        with:
          fetch-tags: 1
          ref: ${{ github.event.inputs.base-version }}

      - name: Version check
        id: version-creator
        uses: actions/github-script@v6
        with:
          result-encoding: string
          script: |
            let baseVersion = '${{ github.event.inputs.base-version }}';
            let upgradeLevel = [
                'major version',
                'minor version',
                'patch',
            ].indexOf('${{ github.event.inputs.release-type }}');

            let regExp = /^v(\d+)\.(\d+)(\.(\d+))?/
            let versionData = regExp.exec(baseVersion);
            let versions = [
                parseInt(versionData[1], 10),
                parseInt(versionData[2], 10),
                parseInt(versionData[4] || '0', 10),
            ];

            versions[upgradeLevel]++;

            for (let level = upgradeLevel + 1; level < versions.length; ++level) {
                versions[level] = 0;
            }

            return `v${versions[0]}.${versions[1]}.${versions[2]}`

      - name: Create release branch
        run: git checkout -b release/${{ steps.version-creator.outputs.result }}

      - name: Push release branch
        run: git push --set-upstream origin release/${{ steps.version-creator.outputs.result }}

      - name: Version replace
        run: .github/workflow-scripts/version-replace ${{ steps.version-creator.outputs.result }}

      - name: Version data commit
        run: git commit --all -m "Prepare ${{ steps.version-creator.outputs.result }}"
          
      - name: Version data push
        run: git push

      - id: pull-request-creator
        uses: actions/github-script@v6
        with:
          result-encoding: string
          script: |
            const { repo, owner } = context.repo;
            const result = await github.rest.pulls.create({
                title: '${{ github.event.inputs.release-type }} ${{ github.event.inputs.release-type }}',
                owner,
                repo,
                head: 'release/${{ steps.version-creator.outputs.result }}',
                base: '${{ github.event.inputs.base-branch }}' || '${{ github.event.inputs.release-type }}' == 'patch' ? 'master' : 'develop',
                body: [
                    'This PR is auto-generated by',
                    '[create-release action](https://github.com/LeonardoZivieri/github-actions-devops/actions/workflows/create-release.yml).'
                ].join('\n')
            });
